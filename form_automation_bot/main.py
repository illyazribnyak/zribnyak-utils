from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager
import time


def check_x_account_exists(login_input: str) -> dict:
    result = {"input": login_input, "exists": None, "profile_url": None, "error": None}

    chrome_options = Options()

    chrome_options.add_argument("--headless")  
    chrome_options.add_argument("--disable-blink-features=AutomationControlled")
    chrome_options.add_experimental_option("excludeSwitches", ["enable-automation"])
    chrome_options.add_experimental_option('useAutomationExtension', False)

    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=chrome_options)

    try:
        driver.get("https://twitter.com/login")
        wait = WebDriverWait(driver, 20)


        user_input = wait.until(EC.presence_of_element_located((By.NAME, "text")))
        user_input.send_keys(login_input)
        user_input.send_keys(Keys.RETURN)
        time.sleep(3)

        page_source = driver.page_source.lower()


        if "couldn‚Äôt find your account" in page_source or "–Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –≤–∞—à –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å" in page_source:
            result["exists"] = False
            return result


        suspicious_texts = [
            "unusual login attempts", "confirm your identity",
            "–Ω–µ–∑–≤–∏—á–Ω—ñ —Å–ø—Ä–æ–±–∏ –≤—Ö–æ–¥—É", "–ø—ñ–¥—Ç–≤–µ—Ä–¥—å—Ç–µ —Å–≤–æ—é –æ—Å–æ–±—É",
            "–≤–≤–µ–¥—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É", "we‚Äôve detected unusual"
        ]
        if any(txt in page_source for txt in suspicious_texts):
            result["exists"] = True
            result["error"] = "Twitter –≤–∏–º–∞–≥–∞—î –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ –ø—ñ–¥–æ–∑—Ä—ñ–ª—É –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å"
            return result


        try:
            wait.until(EC.presence_of_element_located((By.NAME, "password")))
            result["exists"] = True
            if "@" not in login_input and not login_input.startswith("+"):
                result["profile_url"] = f"https://twitter.com/{login_input}"
            return result
        except:
            pass

        if "something went wrong" in page_source or "—â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫" in page_source:
            result["error"] = "Twitter —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π –∞–±–æ –±–ª–æ–∫—É—î –∑–∞–ø–∏—Ç"
            return result

        result["error"] = "–ù–µ–≤–∏–∑–Ω–∞—á–µ–Ω–∞ —Å–∏—Ç—É–∞—Ü—ñ—è. –ú–æ–∂–ª–∏–≤–æ, Twitter –±–ª–æ–∫—É—î –∑–∞–ø–∏—Ç–∏."
        return result

    except Exception as e:
        result["error"] = f"–ü–æ–º–∏–ª–∫–∞: {str(e)}"
        return result
    finally:
        driver.quit()


if __name__ == "__main__":
    login_input = input("–í–≤–µ–¥—ñ—Ç—å email, —Ç–µ–ª–µ—Ñ–æ–Ω –∞–±–æ username: ").strip()
    result = check_x_account_exists(login_input)

    print("\n--- –†–µ–∑—É–ª—å—Ç–∞—Ç ---")

    if result["exists"] is True:
        print("‚úÖ –ê–∫–∞—É–Ω—Ç —ñ—Å–Ω—É—î")
        if result["profile_url"]:
            print(f"üîó –ü–æ—Å–∏–ª–∞–Ω–Ω—è: {result['profile_url']}")
        if result["error"]:
            print(f"‚ö†Ô∏è –£–≤–∞–≥–∞: {result['error']}")

    elif result["exists"] is False:
        print("‚ùå –ê–∫–∞—É–Ω—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")

    else:
        if result["error"] == "–ù–µ–≤–∏–∑–Ω–∞—á–µ–Ω–∞ —Å–∏—Ç—É–∞—Ü—ñ—è. –ú–æ–∂–ª–∏–≤–æ, Twitter –±–ª–æ–∫—É—î –∑–∞–ø–∏—Ç–∏.":
            print("‚ùå –ê–∫–∞—É–Ω—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        else:
            print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞: {result['error']}")
